[
  {
    "key": "cmd+m",
    "command": "workbench.action.toggleMaximizedPanel"
  },
  {
    "key": "cmd+shift+2",
    "command": "workbench.action.toggleEditorWidths"
  },
  {
    "key": "f13",
    "command": "git-graph.view"
  },
  {
    "key": "cmd+l cmd+c",
    "command": "-fiveServer.close",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+l cmd+o",
    "command": "-fiveServer.start",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+l cmd+o",
    "command": "-extension.liveServer.goOnline",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+l cmd+c",
    "command": "-extension.liveServer.goOffline",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+n",
    "command": "explorer.newFile"
  },
  {
    "key": "ctrl+shift+n",
    "command": "explorer.newFolder",
    "when": "explorerViewletFocus"
  },
  {
    "key": "shift+cmd+c",
    "command": "-workbench.action.terminal.openNativeConsole",
    "when": "!terminalFocus"
  },
  {
    "key": "alt+cmd+j",
    "command": "-liveshare.join",
    "when": "liveshare:state != 'Joined' && liveshare:state != 'Shared'"
  },
  {
    "key": "alt+cmd+j",
    "command": "-editor.action.insertSnippet",
    "when": "editorTextFocus && editorLangId == 'nushell'"
  },
  {
    "key": "alt+cmd+x",
    "command": "workbench.action.nextPanelView"
  },
  {
    "key": "alt+cmd+z",
    "command": "workbench.action.previousPanelView"
  },
  {
    "key": "cmd+l cmd+0",
    "command": "-l13Projects.action.hotkey.previousWorkspace"
  },
  {
    "key": "cmd+l cmd+t",
    "command": "-l13Projects.action.tag.pickTag"
  },
  {
    "key": "cmd+l cmd+1",
    "command": "-l13Projects.action.hotkey.slot1"
  },
  {
    "key": "cmd+l cmd+2",
    "command": "-l13Projects.action.hotkey.slot2"
  },
  {
    "key": "cmd+l cmd+3",
    "command": "-l13Projects.action.hotkey.slot3"
  },
  {
    "key": "cmd+l cmd+4",
    "command": "-l13Projects.action.hotkey.slot4"
  },
  {
    "key": "cmd+l cmd+5",
    "command": "-l13Projects.action.hotkey.slot5"
  },
  {
    "key": "cmd+l cmd+6",
    "command": "-l13Projects.action.hotkey.slot6"
  },
  {
    "key": "cmd+l cmd+7",
    "command": "-l13Projects.action.hotkey.slot7"
  },
  {
    "key": "cmd+l cmd+8",
    "command": "-l13Projects.action.hotkey.slot8"
  },
  {
    "key": "cmd+l cmd+9",
    "command": "-l13Projects.action.hotkey.slot9"
  },
  {
    "key": "cmd+l cmd+p",
    "command": "-workbench.view.extension.l13Projects"
  },
  {
    "key": "alt+cmd+;",
    "command": "workbench.action.toggleActivityBarVisibility"
  },
  {
    "key": "alt+cmd+'",
    "command": "workbench.action.toggleAuxiliaryBar"
  },
  {
    "key": "alt+cmd+,",
    "command": "git.openChange"
  },
  {
    "key": "shift+cmd+c",
    "command": "workbench.action.createTerminalEditorSide"
  },
  {
    "key": "alt+cmd+/",
    "command": "-liveshare.followToTheSide",
    "when": "liveshare:hasCollaborators"
  },
  {
    "key": "alt+cmd+/",
    "command": "editor.action.showHover",
    "when": "editorTextFocus"
  },
  // Show the quick pick shell commands history in terminal
  {
    "key": "ctrl+r",
    "command": "workbench.action.quickOpenNavigateNextInViewPicker",
    "when": "inQuickOpen && inTerminalRunCommandPicker"
  },
  // Have ctrl+c close the quick pick
  {
    "key": "ctrl+c",
    "command": "workbench.action.closeQuickOpen",
    "when": "inQuickOpen && inTerminalRunCommandPicker"
  },
  {
    "key": "alt+cmd+b",
    "command": "editor.emmet.action.balanceOut"
  },
  {
    "key": "alt+cmd+v",
    "command": "editor.emmet.action.balanceIn"
  },
  {
    "key": "cmd+0",
    "command": "-workbench.action.focusSideBar"
  },
  {
    "key": "cmd+0",
    "command": "revealInExplorer"
  },
  {
    "key": "cmd+r",
    "command": "rust-analyzer.run",
    "when": "editorLangId == rust"
  },
  {
    "key": "alt+cmd+d",
    "command": "rust-analyzer.openDocs",
    "when": "editorLangId == rust"
  },
  {
    "key": "alt+cmd+o",
    "command": "outline.focus"
  },
  {
    "key": "ctrl+cmd+up",
    "command": "workbench.action.terminal.resizePaneLeft",
    "when": "terminalFocus && panelPosition != 'bottom'"
  },
  {
    "key": "ctrl+cmd+down",
    "command": "workbench.action.terminal.resizePaneRight",
    "when": "terminalFocus && panelPosition != 'bottom'"
  },
  {
    "key": "ctrl+cmd+up",
    "command": "workbench.action.terminal.resizePaneUp",
    "when": "terminalFocus && panelPosition == 'bottom'"
  },
  {
    "key": "ctrl+cmd+down",
    "command": "workbench.action.terminal.resizePaneDown",
    "when": "terminalFocus && panelPosition == 'bottom'"
  },
  // Remove default resize terminal
  {
    "key": "ctrl+cmd+down",
    "command": "-workbench.action.terminal.resizePaneDown",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+cmd+left",
    "command": "-workbench.action.terminal.resizePaneLeft",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+cmd+right",
    "command": "-workbench.action.terminal.resizePaneRight",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+cmd+up",
    "command": "-workbench.action.terminal.resizePaneUp",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+cmd+h",
    "command": "workbench.view.extension.copilot-labs"
  },
  {
    "key": "alt+cmd+y",
    "command": "settings.cycle",
    "when": "editorTextFocus",
    "args": {
      "id": "editor.inlayHints.enabled",
      "values": [
        { "editor.inlayHints.enabled": "offUnlessPressed" },
        { "editor.inlayHints.enabled": "onUnlessPressed" }
      ]
    }
  },
  {
    "key": "cmd+i",
    "command": "toggle.diff.renderSideBySide",
    "when": "editorTextFocus && isInDiffEditor"
  },
  {
    "key": "cmd+\\",
    "command": "-workbench.action.splitEditor"
  },
  {
    "key": "cmd+\\",
    "command": "workbench.action.splitEditorOrthogonal",
    "when": "editorTextFocus && isInDiffEditor"
  },
  {
    "key": "alt+cmd+]",
    "command": "editor.unfoldRecursively",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+k cmd+]",
    "command": "-editor.unfoldRecursively",
    "when": "editorTextFocus && foldingEnabled"
  }
]
