name: Docker

on:
  push:
    branches: [main]
  pull_request: {}
  workflow_dispatch:
    inputs:
      deploy:
        description: Set to `true` to deploy to K8s
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # renovate: tag=v2

      - uses: docker/setup-buildx-action@abe5d8f79a1606a2d3e218847032f3f2b1726ab0 # renovate: tag=v1

      # Compute a should-deploy boolean value
      - name: Compute `should-deploy` boolean value
        id: should-deploy
        run: |
          echo ::set-output name=value::${{ github.ref == 'refs/heads/main' || github.event.inputs.deploy == 'true' }}

      - if: steps.should-deploy.outputs.value == 'true'
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9 # renovate: tag=v1
        with:
          username: ctison
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Cache the Docker layers
        uses: actions/cache@c64c572235d810460d0d6876e9c705ad5002b353 # renovate: tag=v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - uses: docker/build-push-action@a66e35b9cbcf4ad0ea91ffcaf7bbad63ad9e0229 # renovate: tag=v2
        with:
          tags: ctison/ubuntu
          target: ubuntu
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max
          push: ${{ steps.should-deploy.outputs.value == 'true' }}

      - uses: docker/build-push-action@a66e35b9cbcf4ad0ea91ffcaf7bbad63ad9e0229 # renovate: tag=v2
        with:
          tags: ctison/kali
          target: kali
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max
          push: ${{ steps.should-deploy.outputs.value == 'true' }}
